# Generated by Django 4.1.9 on 2023-05-15 12:14

from django.db import migrations, models
import django.db.models.deletion
import wagtail.blocks
import wagtail.documents.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0083_workflowcontenttype'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
            ],
            options={
                'verbose_name': 'About Index Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('introduction_title', models.CharField(help_text='Introduction section title', max_length=100, verbose_name='Introduction Title')),
                ('introduction_text', wagtail.fields.RichTextField(help_text='A short summary of your organisation as an organisation', verbose_name='Introduction Text')),
                ('introduction_button_text', models.TextField(blank=True, max_length=20, null=True, verbose_name='Introduction Button Text')),
                ('mission', models.CharField(help_text="Organisation's mission", max_length=500, null=True, verbose_name="Organisation's mission")),
                ('vision', models.CharField(help_text="Organisation's vision", max_length=500, null=True, verbose_name="Organisation's vision")),
                ('timeline_heading', models.CharField(blank=True, max_length=255, null=True, verbose_name='Timeline Heading')),
                ('timeline', wagtail.fields.StreamField([('nmhs_timeline', wagtail.blocks.StructBlock([('year', wagtail.blocks.CharBlock(max_length=5)), ('milestones', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('period', wagtail.blocks.CharBlock(help_text='This can be the month of the year or the exact date. Leave blank if not known', max_length=50, required=False)), ('description', wagtail.blocks.TextBlock(help_text='Describe the milestone', required=False))])))]))], blank=True, null=True, use_json_field=True, verbose_name='Timeline items')),
                ('org_struct_heading', models.CharField(default='Our Organisational Structure', help_text="Organisation's Structure Section Heading", max_length=250, null=True, verbose_name="Organisation's Struture Heading")),
                ('org_struct_description', wagtail.fields.RichTextField(help_text="Organisation's Structure Description", null=True, verbose_name="Organisation's Struture Description")),
                ('feature_block', wagtail.fields.StreamField([('feature_item', wagtail.blocks.StructBlock([('figure_type', wagtail.blocks.ChoiceBlock(choices=[('image', 'Image'), ('chart', 'Chart'), ('video', 'Video'), ('imageofchange', 'Image of Change')])), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('chart_config_url', wagtail.blocks.URLBlock(help_text='A URL that returns Highcharts.js configuration, including the data', required=False)), ('title', wagtail.blocks.CharBlock()), ('text', wagtail.blocks.TextBlock(label='Description')), ('action_link_text', wagtail.blocks.CharBlock(max_length=15, required=False)), ('action_link', wagtail.blocks.PageChooserBlock(label='Action Link Internal', required=False)), ('action_link_external', wagtail.blocks.URLBlock(help_text='An external link to a detailed resource on the internet.If provided, the internal link will be ignored', max_length=400, required=False))]))], blank=True, null=True, use_json_field=True, verbose_name='Feature Block')),
                ('additional_materials', wagtail.fields.StreamField([('material', wagtail.blocks.StructBlock([('category', wagtail.blocks.CharBlock(max_length=255)), ('materials', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('type', wagtail.blocks.ChoiceBlock(choices=[('document', 'Document/File'), ('image', 'Image')])), ('title', wagtail.blocks.CharBlock(max_length=255)), ('document', wagtail.documents.blocks.DocumentChooserBlock(help_text='Select document or file', required=False, verbose_name='Document/File')), ('image', wagtail.images.blocks.ImageChooserBlock(help_text='Select/upload image', required=False))])))]))], blank=True, null=True, use_json_field=True, verbose_name='Additional Materials')),
                ('bottom_call_to_action_heading', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bottom Call to action heading')),
                ('bottom_call_to_action_description', models.TextField(blank=True, null=True, verbose_name='Bottom call to action description')),
                ('bottom_call_to_action_button_text', models.CharField(blank=True, max_length=20, null=True, verbose_name='Bottom call to action button text')),
            ],
            options={
                'verbose_name': 'About Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('link', models.URLField(blank=True, help_text='Link to the partners website', max_length=500, null=True, verbose_name="Link to partner's website")),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('visible_on_homepage', models.BooleanField(default=False, verbose_name='Visible on Homepage')),
                ('is_main', models.BooleanField(default=False, verbose_name='Is Main')),
            ],
            options={
                'verbose_name': 'Partner',
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='PartnersPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('banner_title', models.CharField(max_length=255, verbose_name='Banner Title')),
                ('banner_subtitle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Banner Subtitle')),
                ('call_to_action_button_text', models.CharField(blank=True, max_length=100, null=True, verbose_name='Call to action button text')),
                ('introduction_title', models.CharField(help_text='Introduction section title', max_length=100, verbose_name='Introduction title')),
                ('introduction_text', wagtail.fields.RichTextField(help_text='A summary of your organisation relations with partners', verbose_name='Introduction text')),
                ('introduction_button_text', models.TextField(blank=True, max_length=20, null=True, verbose_name='Introduction button text')),
                ('partners_cta_title', models.CharField(help_text='Partners call to action section title', max_length=100, verbose_name='Partners Call to Action title')),
                ('partners_cta_text', wagtail.fields.RichTextField(help_text='Call to action description text', verbose_name='Partners call to action text')),
                ('partners_cta_button_text', models.TextField(blank=True, max_length=20, null=True, verbose_name='Partners call to action button text')),
                ('banner_image', models.ForeignKey(blank=True, help_text='A high quality image related to Partners', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image', verbose_name='Banner Image')),
                ('call_to_action_related_page', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='Call to action related page')),
                ('introduction_button_link', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailcore.page', verbose_name='Introduction button link')),
            ],
            options={
                'verbose_name': 'Partners Page',
            },
            bases=('wagtailcore.page',),
        ),
    ]
